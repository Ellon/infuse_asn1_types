#ifndef GENERATED_ASN1SCC_VISUALPOINTFEATUREVECTOR2D_H
#define GENERATED_ASN1SCC_VISUALPOINTFEATUREVECTOR2D_H
/*
Code automatically generated by asn1scc tool
*/
#include "taste-extended.h"
#include "Point.h"
#include "taste-types.h"
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif



typedef struct {    int nCount; 
    
    asn1SccT_Float arr[128];
} asn1SccVisualPointFeature2D_descriptor;

#define asn1SccVisualPointFeature2D_descriptor_REQUIRED_BYTES_FOR_ENCODING       1665 
#define asn1SccVisualPointFeature2D_descriptor_REQUIRED_BITS_FOR_ENCODING        13320
#define asn1SccVisualPointFeature2D_descriptor_REQUIRED_BYTES_FOR_ACN_ENCODING   1665 
#define asn1SccVisualPointFeature2D_descriptor_REQUIRED_BITS_FOR_ACN_ENCODING    13320
#define asn1SccVisualPointFeature2D_descriptor_REQUIRED_BYTES_FOR_XER_ENCODING   8899

void asn1SccVisualPointFeature2D_descriptor_Initialize(asn1SccVisualPointFeature2D_descriptor* pVal);
flag asn1SccVisualPointFeature2D_descriptor_IsConstraintValid(const asn1SccVisualPointFeature2D_descriptor* val, int* pErrCode);
#ifndef ERR_asn1SccVisualPointFeature2D_descriptor 
#define ERR_asn1SccVisualPointFeature2D_descriptor		1001  /*(SIZE(0 .. descriptor2DNameLength))*/
#endif

typedef struct {
    asn1SccPoint2D point;
    asn1SccVisualPointFeature2D_descriptor descriptor;
} asn1SccVisualPointFeature2D;

#define asn1SccVisualPointFeature2D_REQUIRED_BYTES_FOR_ENCODING       1691 
#define asn1SccVisualPointFeature2D_REQUIRED_BITS_FOR_ENCODING        13528
#define asn1SccVisualPointFeature2D_REQUIRED_BYTES_FOR_ACN_ENCODING   1691 
#define asn1SccVisualPointFeature2D_REQUIRED_BITS_FOR_ACN_ENCODING    13528
#define asn1SccVisualPointFeature2D_REQUIRED_BYTES_FOR_XER_ENCODING   9059

void asn1SccVisualPointFeature2D_Initialize(asn1SccVisualPointFeature2D* pVal);
flag asn1SccVisualPointFeature2D_IsConstraintValid(const asn1SccVisualPointFeature2D* val, int* pErrCode);


typedef struct {    int nCount; 
    
    asn1SccVisualPointFeature2D arr[1024];
} asn1SccVisualPointFeatureVector2D;

#define asn1SccVisualPointFeatureVector2D_REQUIRED_BYTES_FOR_ENCODING       1731586 
#define asn1SccVisualPointFeatureVector2D_REQUIRED_BITS_FOR_ENCODING        13852683
#define asn1SccVisualPointFeatureVector2D_REQUIRED_BYTES_FOR_ACN_ENCODING   1731586 
#define asn1SccVisualPointFeatureVector2D_REQUIRED_BITS_FOR_ACN_ENCODING    13852683
#define asn1SccVisualPointFeatureVector2D_REQUIRED_BYTES_FOR_XER_ENCODING   9276473

void asn1SccVisualPointFeatureVector2D_Initialize(asn1SccVisualPointFeatureVector2D* pVal);
flag asn1SccVisualPointFeatureVector2D_IsConstraintValid(const asn1SccVisualPointFeatureVector2D* val, int* pErrCode);
#ifndef ERR_asn1SccVisualPointFeatureVector2D 
#define ERR_asn1SccVisualPointFeatureVector2D		1002  /*(SIZE(0 .. features2DElementsMax))*/
#endif

extern const asn1SccT_UInt32 features2DElementsMax;
extern const asn1SccT_UInt32 descriptor2DNameLength; 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

flag asn1SccVisualPointFeature2D_descriptor_Encode(const asn1SccVisualPointFeature2D_descriptor* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccVisualPointFeature2D_descriptor_Decode(asn1SccVisualPointFeature2D_descriptor* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccVisualPointFeature2D_descriptor_ACN_Encode(const asn1SccVisualPointFeature2D_descriptor* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccVisualPointFeature2D_descriptor_ACN_Decode(asn1SccVisualPointFeature2D_descriptor* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccVisualPointFeature2D_Encode(const asn1SccVisualPointFeature2D* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccVisualPointFeature2D_Decode(asn1SccVisualPointFeature2D* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccVisualPointFeature2D_ACN_Encode(const asn1SccVisualPointFeature2D* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccVisualPointFeature2D_ACN_Decode(asn1SccVisualPointFeature2D* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccVisualPointFeatureVector2D_Encode(const asn1SccVisualPointFeatureVector2D* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccVisualPointFeatureVector2D_Decode(asn1SccVisualPointFeatureVector2D* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccVisualPointFeatureVector2D_ACN_Encode(const asn1SccVisualPointFeatureVector2D* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccVisualPointFeatureVector2D_ACN_Decode(asn1SccVisualPointFeatureVector2D* pVal, BitStream* pBitStrm, int* pErrCode); 


#ifdef  __cplusplus
}

#endif

#endif
