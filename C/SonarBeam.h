#ifndef GENERATED_ASN1SCC_SONARBEAM_H
#define GENERATED_ASN1SCC_SONARBEAM_H
/*
Code automatically generated by asn1scc tool
*/
#include "taste-extended.h"
#include "Angle.h"
#include "taste-types.h"
#include "Time.h"
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif



typedef struct {    int nCount; 
    
    asn1SccT_UInt8 arr[60];
} asn1SccSonarBeam_beam;

#define asn1SccSonarBeam_beam_REQUIRED_BYTES_FOR_ENCODING       61 
#define asn1SccSonarBeam_beam_REQUIRED_BITS_FOR_ENCODING        486
#define asn1SccSonarBeam_beam_REQUIRED_BYTES_FOR_ACN_ENCODING   61 
#define asn1SccSonarBeam_beam_REQUIRED_BITS_FOR_ACN_ENCODING    486
#define asn1SccSonarBeam_beam_REQUIRED_BYTES_FOR_XER_ENCODING   2373

void asn1SccSonarBeam_beam_Initialize(asn1SccSonarBeam_beam* pVal);
flag asn1SccSonarBeam_beam_IsConstraintValid(const asn1SccSonarBeam_beam* val, int* pErrCode);
#ifndef ERR_asn1SccSonarBeam_beam 
#define ERR_asn1SccSonarBeam_beam		1001  /*(SIZE(1 .. maxSonarBeamSize))*/
#endif

typedef struct {
    asn1SccTime ref_time;
    asn1SccAngle bearing;
    asn1SccT_Double sampling_interval;
    asn1SccT_Float speed_of_sound;
    asn1SccT_Float beamwidth_horizontal;
    asn1SccT_Float beamwidth_vertical;
    asn1SccSonarBeam_beam beam;
} asn1SccSonarBeam;

#define asn1SccSonarBeam_REQUIRED_BYTES_FOR_ENCODING       138 
#define asn1SccSonarBeam_REQUIRED_BITS_FOR_ENCODING        1102
#define asn1SccSonarBeam_REQUIRED_BYTES_FOR_ACN_ENCODING   138 
#define asn1SccSonarBeam_REQUIRED_BITS_FOR_ACN_ENCODING    1102
#define asn1SccSonarBeam_REQUIRED_BYTES_FOR_XER_ENCODING   2929

void asn1SccSonarBeam_Initialize(asn1SccSonarBeam* pVal);
flag asn1SccSonarBeam_IsConstraintValid(const asn1SccSonarBeam* val, int* pErrCode);


extern const asn1SccT_UInt32 maxSonarBeamSize; 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

flag asn1SccSonarBeam_beam_Encode(const asn1SccSonarBeam_beam* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccSonarBeam_beam_Decode(asn1SccSonarBeam_beam* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccSonarBeam_beam_ACN_Encode(const asn1SccSonarBeam_beam* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccSonarBeam_beam_ACN_Decode(asn1SccSonarBeam_beam* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccSonarBeam_Encode(const asn1SccSonarBeam* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccSonarBeam_Decode(asn1SccSonarBeam* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccSonarBeam_ACN_Encode(const asn1SccSonarBeam* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccSonarBeam_ACN_Decode(asn1SccSonarBeam* pVal, BitStream* pBitStrm, int* pErrCode); 


#ifdef  __cplusplus
}

#endif

#endif
