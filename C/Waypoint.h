#ifndef GENERATED_ASN1SCC_WAYPOINT_H
#define GENERATED_ASN1SCC_WAYPOINT_H
/*
Code automatically generated by asn1scc tool
*/
#include "taste-extended.h"
#include "Eigen.h"
#include "taste-types.h"
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif



typedef struct {
    asn1SccVector3d position;
    asn1SccT_Double heading;
    asn1SccT_Double tol_position;
    asn1SccT_Double tol_heading;
} asn1SccWaypoint;

#define asn1SccWaypoint_REQUIRED_BYTES_FOR_ENCODING       78 
#define asn1SccWaypoint_REQUIRED_BITS_FOR_ENCODING        624
#define asn1SccWaypoint_REQUIRED_BYTES_FOR_ACN_ENCODING   78 
#define asn1SccWaypoint_REQUIRED_BITS_FOR_ACN_ENCODING    624
#define asn1SccWaypoint_REQUIRED_BYTES_FOR_XER_ENCODING   480

void asn1SccWaypoint_Initialize(asn1SccWaypoint* pVal);
flag asn1SccWaypoint_IsConstraintValid(const asn1SccWaypoint* val, int* pErrCode);


 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

flag asn1SccWaypoint_Encode(const asn1SccWaypoint* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccWaypoint_Decode(asn1SccWaypoint* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccWaypoint_ACN_Encode(const asn1SccWaypoint* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccWaypoint_ACN_Decode(asn1SccWaypoint* pVal, BitStream* pBitStrm, int* pErrCode); 


#ifdef  __cplusplus
}

#endif

#endif
