#ifndef GENERATED_ASN1SCC_COVARIANCE_H
#define GENERATED_ASN1SCC_COVARIANCE_H
/*
Code automatically generated by asn1scc tool
*/
#include "taste-extended.h"
#include "Eigen.h"
#include "taste-types.h"
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif



typedef asn1SccMatrix6d asn1SccCovariance;

#define asn1SccCovariance_REQUIRED_BYTES_FOR_ENCODING       468 
#define asn1SccCovariance_REQUIRED_BITS_FOR_ENCODING        3744
#define asn1SccCovariance_REQUIRED_BYTES_FOR_ACN_ENCODING   468 
#define asn1SccCovariance_REQUIRED_BITS_FOR_ACN_ENCODING    3744
#define asn1SccCovariance_REQUIRED_BYTES_FOR_XER_ENCODING   2743

void asn1SccCovariance_Initialize(asn1SccCovariance* pVal);
flag asn1SccCovariance_IsConstraintValid(const asn1SccCovariance* val, int* pErrCode);


 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

flag asn1SccCovariance_Encode(const asn1SccCovariance* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccCovariance_Decode(asn1SccCovariance* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccCovariance_ACN_Encode(const asn1SccCovariance* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccCovariance_ACN_Decode(asn1SccCovariance* pVal, BitStream* pBitStrm, int* pErrCode); 


#ifdef  __cplusplus
}

#endif

#endif
