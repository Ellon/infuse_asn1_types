#ifndef GENERATED_ASN1SCC_JOINTS_H
#define GENERATED_ASN1SCC_JOINTS_H
/*
Code automatically generated by asn1scc tool
*/
#include "taste-extended.h"
#include "taste-types.h"
#include "Time.h"
#include "JointState.h"
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif



typedef struct {    int nCount; 
    
    asn1SccT_String arr[30];
} asn1SccJoints_names;

#define asn1SccJoints_names_REQUIRED_BYTES_FOR_ENCODING       7715 
#define asn1SccJoints_names_REQUIRED_BITS_FOR_ENCODING        61715
#define asn1SccJoints_names_REQUIRED_BYTES_FOR_ACN_ENCODING   7715 
#define asn1SccJoints_names_REQUIRED_BITS_FOR_ACN_ENCODING    61715
#define asn1SccJoints_names_REQUIRED_BYTES_FOR_XER_ENCODING   16019

void asn1SccJoints_names_Initialize(asn1SccJoints_names* pVal);
flag asn1SccJoints_names_IsConstraintValid(const asn1SccJoints_names* val, int* pErrCode);
#ifndef ERR_asn1SccJoints_names 
#define ERR_asn1SccJoints_names		1001  /*(SIZE(0 .. jointsElementsMax))*/
#endif

typedef struct {    int nCount; 
    
    asn1SccJointState arr[30];
} asn1SccJoints_elements;

#define asn1SccJoints_elements_REQUIRED_BYTES_FOR_ENCODING       1951 
#define asn1SccJoints_elements_REQUIRED_BITS_FOR_ENCODING        15605
#define asn1SccJoints_elements_REQUIRED_BYTES_FOR_ACN_ENCODING   1951 
#define asn1SccJoints_elements_REQUIRED_BITS_FOR_ACN_ENCODING    15605
#define asn1SccJoints_elements_REQUIRED_BYTES_FOR_XER_ENCODING   11075

void asn1SccJoints_elements_Initialize(asn1SccJoints_elements* pVal);
flag asn1SccJoints_elements_IsConstraintValid(const asn1SccJoints_elements* val, int* pErrCode);
#ifndef ERR_asn1SccJoints_elements 
#define ERR_asn1SccJoints_elements		1002  /*(SIZE(0 .. jointsElementsMax))*/
#endif

typedef struct {
    asn1SccTime timestamp;
    asn1SccJoints_names names;
    asn1SccJoints_elements elements;
} asn1SccJoints;

#define asn1SccJoints_REQUIRED_BYTES_FOR_ENCODING       9677 
#define asn1SccJoints_REQUIRED_BITS_FOR_ENCODING        77416
#define asn1SccJoints_REQUIRED_BYTES_FOR_ACN_ENCODING   9677 
#define asn1SccJoints_REQUIRED_BITS_FOR_ACN_ENCODING    77416
#define asn1SccJoints_REQUIRED_BYTES_FOR_XER_ENCODING   27200

void asn1SccJoints_Initialize(asn1SccJoints* pVal);
flag asn1SccJoints_IsConstraintValid(const asn1SccJoints* val, int* pErrCode);


extern const asn1SccT_UInt32 jointsNameLength;
extern const asn1SccT_UInt32 jointsElementsMax; 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

flag asn1SccJoints_names_Encode(const asn1SccJoints_names* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccJoints_names_Decode(asn1SccJoints_names* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccJoints_names_ACN_Encode(const asn1SccJoints_names* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccJoints_names_ACN_Decode(asn1SccJoints_names* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccJoints_elements_Encode(const asn1SccJoints_elements* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccJoints_elements_Decode(asn1SccJoints_elements* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccJoints_elements_ACN_Encode(const asn1SccJoints_elements* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccJoints_elements_ACN_Decode(asn1SccJoints_elements* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccJoints_Encode(const asn1SccJoints* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccJoints_Decode(asn1SccJoints* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccJoints_ACN_Encode(const asn1SccJoints* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccJoints_ACN_Decode(asn1SccJoints* pVal, BitStream* pBitStrm, int* pErrCode); 


#ifdef  __cplusplus
}

#endif

#endif
