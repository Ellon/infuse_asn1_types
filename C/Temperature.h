#ifndef GENERATED_ASN1SCC_TEMPERATURE_H
#define GENERATED_ASN1SCC_TEMPERATURE_H
/*
Code automatically generated by asn1scc tool
*/
#include "taste-extended.h"
#include "taste-types.h"
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif



typedef struct {
    asn1SccT_Double kelvin;
} asn1SccTemperature;

#define asn1SccTemperature_REQUIRED_BYTES_FOR_ENCODING       13 
#define asn1SccTemperature_REQUIRED_BITS_FOR_ENCODING        104
#define asn1SccTemperature_REQUIRED_BYTES_FOR_ACN_ENCODING   13 
#define asn1SccTemperature_REQUIRED_BITS_FOR_ACN_ENCODING    104
#define asn1SccTemperature_REQUIRED_BYTES_FOR_XER_ENCODING   94

void asn1SccTemperature_Initialize(asn1SccTemperature* pVal);
flag asn1SccTemperature_IsConstraintValid(const asn1SccTemperature* val, int* pErrCode);


 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

flag asn1SccTemperature_Encode(const asn1SccTemperature* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccTemperature_Decode(asn1SccTemperature* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccTemperature_ACN_Encode(const asn1SccTemperature* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccTemperature_ACN_Decode(asn1SccTemperature* pVal, BitStream* pBitStrm, int* pErrCode); 


#ifdef  __cplusplus
}

#endif

#endif
