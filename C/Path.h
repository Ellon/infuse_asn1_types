#ifndef GENERATED_ASN1SCC_PATH_H
#define GENERATED_ASN1SCC_PATH_H
/*
Code automatically generated by asn1scc tool
*/
#include "TransformWithCovariance.h"
#include "taste-types.h"
#include "Time.h"
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif



typedef struct {    int nCount; 
    
    asn1SccTransformWithCovariance arr[100];
} asn1SccPath_waypoints;

#define asn1SccPath_waypoints_REQUIRED_BYTES_FOR_ENCODING       135926 
#define asn1SccPath_waypoints_REQUIRED_BITS_FOR_ENCODING        1087407
#define asn1SccPath_waypoints_REQUIRED_BYTES_FOR_ACN_ENCODING   135926 
#define asn1SccPath_waypoints_REQUIRED_BITS_FOR_ACN_ENCODING    1087407
#define asn1SccPath_waypoints_REQUIRED_BYTES_FOR_XER_ENCODING   542433

void asn1SccPath_waypoints_Initialize(asn1SccPath_waypoints* pVal);
flag asn1SccPath_waypoints_IsConstraintValid(const asn1SccPath_waypoints* val, int* pErrCode);
#ifndef ERR_asn1SccPath_waypoints 
#define ERR_asn1SccPath_waypoints		1001  /*(SIZE(0 .. pathMaxSize))*/
#endif

typedef struct {
    asn1SccT_UInt32 msgVersion;
    asn1SccTime timeStamp;
    asn1SccPath_waypoints waypoints;
} asn1SccPath;

#define asn1SccPath_REQUIRED_BYTES_FOR_ENCODING       135942 
#define asn1SccPath_REQUIRED_BITS_FOR_ENCODING        1087535
#define asn1SccPath_REQUIRED_BYTES_FOR_ACN_ENCODING   135942 
#define asn1SccPath_REQUIRED_BITS_FOR_ACN_ENCODING    1087535
#define asn1SccPath_REQUIRED_BYTES_FOR_XER_ENCODING   542598

void asn1SccPath_Initialize(asn1SccPath* pVal);
flag asn1SccPath_IsConstraintValid(const asn1SccPath* val, int* pErrCode);


extern const asn1SccT_UInt32 pathMaxSize; 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

flag asn1SccPath_waypoints_Encode(const asn1SccPath_waypoints* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccPath_waypoints_Decode(asn1SccPath_waypoints* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccPath_waypoints_ACN_Encode(const asn1SccPath_waypoints* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccPath_waypoints_ACN_Decode(asn1SccPath_waypoints* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccPath_Encode(const asn1SccPath* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccPath_Decode(asn1SccPath* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccPath_ACN_Encode(const asn1SccPath* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccPath_ACN_Decode(asn1SccPath* pVal, BitStream* pBitStrm, int* pErrCode); 


#ifdef  __cplusplus
}

#endif

#endif
