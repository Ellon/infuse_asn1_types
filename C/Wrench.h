#ifndef GENERATED_ASN1SCC_WRENCH_H
#define GENERATED_ASN1SCC_WRENCH_H
/*
Code automatically generated by asn1scc tool
*/
#include "taste-extended.h"
#include "Eigen.h"
#include "taste-types.h"
#include "Time.h"
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif



typedef struct {
    asn1SccTime timestamp;
    asn1SccVector3d force;
    asn1SccVector3d torque;
} asn1SccWrench;

#define asn1SccWrench_REQUIRED_BYTES_FOR_ENCODING       90 
#define asn1SccWrench_REQUIRED_BITS_FOR_ENCODING        720
#define asn1SccWrench_REQUIRED_BYTES_FOR_ACN_ENCODING   90 
#define asn1SccWrench_REQUIRED_BITS_FOR_ACN_ENCODING    720
#define asn1SccWrench_REQUIRED_BYTES_FOR_XER_ENCODING   592

void asn1SccWrench_Initialize(asn1SccWrench* pVal);
flag asn1SccWrench_IsConstraintValid(const asn1SccWrench* val, int* pErrCode);


 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

flag asn1SccWrench_Encode(const asn1SccWrench* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccWrench_Decode(asn1SccWrench* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccWrench_ACN_Encode(const asn1SccWrench* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccWrench_ACN_Decode(asn1SccWrench* pVal, BitStream* pBitStrm, int* pErrCode); 


#ifdef  __cplusplus
}

#endif

#endif
