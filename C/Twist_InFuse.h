#ifndef GENERATED_ASN1SCC_TWIST_INFUSE_H
#define GENERATED_ASN1SCC_TWIST_INFUSE_H
/*
Code automatically generated by asn1scc tool
*/
#include "TwistWithCovariance.h"
#include "taste-types.h"
#include "Time.h"
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif



typedef struct {
    asn1SccT_UInt32 msgVersion;
    asn1SccTime timeStamp;
    asn1SccTwistWithCovariance twist;
} asn1SccTwist_InFuse;

#define asn1SccTwist_InFuse_REQUIRED_BYTES_FOR_ENCODING       578 
#define asn1SccTwist_InFuse_REQUIRED_BITS_FOR_ENCODING        4624
#define asn1SccTwist_InFuse_REQUIRED_BYTES_FOR_ACN_ENCODING   578 
#define asn1SccTwist_InFuse_REQUIRED_BITS_FOR_ACN_ENCODING    4624
#define asn1SccTwist_InFuse_REQUIRED_BYTES_FOR_XER_ENCODING   3579

void asn1SccTwist_InFuse_Initialize(asn1SccTwist_InFuse* pVal);
flag asn1SccTwist_InFuse_IsConstraintValid(const asn1SccTwist_InFuse* val, int* pErrCode);


extern const asn1SccT_UInt32 twist_InFuse_Version; 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

flag asn1SccTwist_InFuse_Encode(const asn1SccTwist_InFuse* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccTwist_InFuse_Decode(asn1SccTwist_InFuse* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccTwist_InFuse_ACN_Encode(const asn1SccTwist_InFuse* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccTwist_InFuse_ACN_Decode(asn1SccTwist_InFuse* pVal, BitStream* pBitStrm, int* pErrCode); 


#ifdef  __cplusplus
}

#endif

#endif
