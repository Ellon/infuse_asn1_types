#ifndef GENERATED_ASN1SCC_JOINTSTRAJECTORY_H
#define GENERATED_ASN1SCC_JOINTSTRAJECTORY_H
/*
Code automatically generated by asn1scc tool
*/
#include "taste-extended.h"
#include "taste-types.h"
#include "Time.h"
#include "JointState.h"
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif



typedef struct {
    asn1SccT_UInt32 time_step;
} asn1SccInvalidTimeStep;

#define asn1SccInvalidTimeStep_REQUIRED_BYTES_FOR_ENCODING       4 
#define asn1SccInvalidTimeStep_REQUIRED_BITS_FOR_ENCODING        32
#define asn1SccInvalidTimeStep_REQUIRED_BYTES_FOR_ACN_ENCODING   4 
#define asn1SccInvalidTimeStep_REQUIRED_BITS_FOR_ACN_ENCODING    32
#define asn1SccInvalidTimeStep_REQUIRED_BYTES_FOR_XER_ENCODING   78

void asn1SccInvalidTimeStep_Initialize(asn1SccInvalidTimeStep* pVal);
flag asn1SccInvalidTimeStep_IsConstraintValid(const asn1SccInvalidTimeStep* val, int* pErrCode);


typedef struct {    int nCount; 
    
    asn1SccT_String arr[60];
} asn1SccJointsTrajectory_vector_name;

#define asn1SccJointsTrajectory_vector_name_REQUIRED_BYTES_FOR_ENCODING       15429 
#define asn1SccJointsTrajectory_vector_name_REQUIRED_BITS_FOR_ENCODING        123426
#define asn1SccJointsTrajectory_vector_name_REQUIRED_BYTES_FOR_ACN_ENCODING   15429 
#define asn1SccJointsTrajectory_vector_name_REQUIRED_BITS_FOR_ACN_ENCODING    123426
#define asn1SccJointsTrajectory_vector_name_REQUIRED_BYTES_FOR_XER_ENCODING   32041

void asn1SccJointsTrajectory_vector_name_Initialize(asn1SccJointsTrajectory_vector_name* pVal);
flag asn1SccJointsTrajectory_vector_name_IsConstraintValid(const asn1SccJointsTrajectory_vector_name* val, int* pErrCode);
#ifndef ERR_asn1SccJointsTrajectory_vector_name 
#define ERR_asn1SccJointsTrajectory_vector_name		1001  /*(SIZE(1 .. maxJointsTrajectorySize))*/
#endif

typedef struct {    int nCount; 
    
    asn1SccJointState arr[60];
} asn1SccJointTrajectory;

#define asn1SccJointTrajectory_REQUIRED_BYTES_FOR_ENCODING       3901 
#define asn1SccJointTrajectory_REQUIRED_BITS_FOR_ENCODING        31206
#define asn1SccJointTrajectory_REQUIRED_BYTES_FOR_ACN_ENCODING   3901 
#define asn1SccJointTrajectory_REQUIRED_BITS_FOR_ACN_ENCODING    31206
#define asn1SccJointTrajectory_REQUIRED_BYTES_FOR_XER_ENCODING   22115

void asn1SccJointTrajectory_Initialize(asn1SccJointTrajectory* pVal);
flag asn1SccJointTrajectory_IsConstraintValid(const asn1SccJointTrajectory* val, int* pErrCode);
#ifndef ERR_asn1SccJointTrajectory 
#define ERR_asn1SccJointTrajectory		1002  /*(SIZE(1 .. maxJointTrajectorySize))*/
#endif

typedef struct {    int nCount; 
    
    asn1SccJointTrajectory arr[60];
} asn1SccJointsTrajectory_trajectory;

#define asn1SccJointsTrajectory_trajectory_REQUIRED_BYTES_FOR_ENCODING       234046 
#define asn1SccJointsTrajectory_trajectory_REQUIRED_BITS_FOR_ENCODING        1872366
#define asn1SccJointsTrajectory_trajectory_REQUIRED_BYTES_FOR_ACN_ENCODING   234046 
#define asn1SccJointsTrajectory_trajectory_REQUIRED_BITS_FOR_ACN_ENCODING    1872366
#define asn1SccJointsTrajectory_trajectory_REQUIRED_BYTES_FOR_XER_ENCODING   1326959

void asn1SccJointsTrajectory_trajectory_Initialize(asn1SccJointsTrajectory_trajectory* pVal);
flag asn1SccJointsTrajectory_trajectory_IsConstraintValid(const asn1SccJointsTrajectory_trajectory* val, int* pErrCode);
#ifndef ERR_asn1SccJointsTrajectory_trajectory 
#define ERR_asn1SccJointsTrajectory_trajectory		1003  /*(SIZE(1 .. maxJointsTrajectorySize))*/
#endif

typedef struct {    int nCount; 
    
    asn1SccTime arr[60];
} asn1SccJointsTrajectory_timetags;

#define asn1SccJointsTrajectory_timetags_REQUIRED_BYTES_FOR_ENCODING       721 
#define asn1SccJointsTrajectory_timetags_REQUIRED_BITS_FOR_ENCODING        5766
#define asn1SccJointsTrajectory_timetags_REQUIRED_BYTES_FOR_ACN_ENCODING   721 
#define asn1SccJointsTrajectory_timetags_REQUIRED_BITS_FOR_ACN_ENCODING    5766
#define asn1SccJointsTrajectory_timetags_REQUIRED_BYTES_FOR_XER_ENCODING   6475

void asn1SccJointsTrajectory_timetags_Initialize(asn1SccJointsTrajectory_timetags* pVal);
flag asn1SccJointsTrajectory_timetags_IsConstraintValid(const asn1SccJointsTrajectory_timetags* val, int* pErrCode);
#ifndef ERR_asn1SccJointsTrajectory_timetags 
#define ERR_asn1SccJointsTrajectory_timetags		1004  /*(SIZE(1 .. maxJointsTrajectorySize))*/
#endif

typedef struct {
    asn1SccJointsTrajectory_vector_name vector_name;
    asn1SccJointsTrajectory_timetags timetags;
    asn1SccJointsTrajectory_trajectory trajectory;
} asn1SccJointsTrajectory;

#define asn1SccJointsTrajectory_REQUIRED_BYTES_FOR_ENCODING       250195 
#define asn1SccJointsTrajectory_REQUIRED_BITS_FOR_ENCODING        2001558
#define asn1SccJointsTrajectory_REQUIRED_BYTES_FOR_ACN_ENCODING   250195 
#define asn1SccJointsTrajectory_REQUIRED_BITS_FOR_ACN_ENCODING    2001558
#define asn1SccJointsTrajectory_REQUIRED_BYTES_FOR_XER_ENCODING   1365410

void asn1SccJointsTrajectory_Initialize(asn1SccJointsTrajectory* pVal);
flag asn1SccJointsTrajectory_IsConstraintValid(const asn1SccJointsTrajectory* val, int* pErrCode);


extern const asn1SccT_UInt32 maxJointTrajectorySize;
extern const asn1SccT_UInt32 maxJointsTrajectorySize; 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

flag asn1SccInvalidTimeStep_Encode(const asn1SccInvalidTimeStep* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccInvalidTimeStep_Decode(asn1SccInvalidTimeStep* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccInvalidTimeStep_ACN_Encode(const asn1SccInvalidTimeStep* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccInvalidTimeStep_ACN_Decode(asn1SccInvalidTimeStep* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccJointsTrajectory_vector_name_Encode(const asn1SccJointsTrajectory_vector_name* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccJointsTrajectory_vector_name_Decode(asn1SccJointsTrajectory_vector_name* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccJointsTrajectory_vector_name_ACN_Encode(const asn1SccJointsTrajectory_vector_name* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccJointsTrajectory_vector_name_ACN_Decode(asn1SccJointsTrajectory_vector_name* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccJointTrajectory_Encode(const asn1SccJointTrajectory* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccJointTrajectory_Decode(asn1SccJointTrajectory* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccJointTrajectory_ACN_Encode(const asn1SccJointTrajectory* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccJointTrajectory_ACN_Decode(asn1SccJointTrajectory* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccJointsTrajectory_trajectory_Encode(const asn1SccJointsTrajectory_trajectory* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccJointsTrajectory_trajectory_Decode(asn1SccJointsTrajectory_trajectory* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccJointsTrajectory_trajectory_ACN_Encode(const asn1SccJointsTrajectory_trajectory* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccJointsTrajectory_trajectory_ACN_Decode(asn1SccJointsTrajectory_trajectory* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccJointsTrajectory_timetags_Encode(const asn1SccJointsTrajectory_timetags* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccJointsTrajectory_timetags_Decode(asn1SccJointsTrajectory_timetags* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccJointsTrajectory_timetags_ACN_Encode(const asn1SccJointsTrajectory_timetags* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccJointsTrajectory_timetags_ACN_Decode(asn1SccJointsTrajectory_timetags* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccJointsTrajectory_Encode(const asn1SccJointsTrajectory* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccJointsTrajectory_Decode(asn1SccJointsTrajectory* pVal, BitStream* pBitStrm, int* pErrCode);
flag asn1SccJointsTrajectory_ACN_Encode(const asn1SccJointsTrajectory* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccJointsTrajectory_ACN_Decode(asn1SccJointsTrajectory* pVal, BitStream* pBitStrm, int* pErrCode); 


#ifdef  __cplusplus
}

#endif

#endif
